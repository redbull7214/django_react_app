version: '3.8'

services:
  django:
    build: ./software_accounting/

    restart: always
    ports:
      - 8000:8000

    command: gunicorn software_accounting.wsgi:application --bind 0.0.0.0:8000

    volumes:
      - ./software_accounting:/usr/src/app/
      - django_static_volume:/usr/src/app/static
      - django_media_volume:/usr/src/app/media
    depends_on:
      - db
      # - redis
    environment:
      SECRET_KEY: ${SECRET_KEY-django-insecure-406s7&%gcfvz41bf@hhuj%=i5j@!so9t$lrm1i4^i_g*i+sjj2}
      DEBUG: ${DEBUG-TRUE}
      ACCESS_TOKEN_LIFETIME_MINS: ${ACCESS_TOKEN_LIFETIME_MINS-60}
      REFRESH_TOKEN_LIFETIME_DAYS: ${REFRESH_TOKEN_LIFETIME_DAYS-1}
      DATABASE_URL: ${DATABASE_URL-postgres://app_dev:OwOtBdfep9Frut@db:5432/app_dev}
      # REDIS_URL: ${REDIS_URL-172.18.0.3}
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    networks:
      - myNetwork


  node:
    build:
      context: .
      dockerfile: ./reactapp/Dockerfile
    container_name: reactapp
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./reactapp/public/:/usr/src/app/public/
      - ./reactapp/src/:/usr/src/app/src/
      - ./reactapp/package-lock.json:/opt/app/package-lock.json
      - ./reactapp/package.json:/opt/app/package.json

    command: serve -s build -l 3000
    depends_on:
      - django
    networks:
      - myNetwork

      
  nginx:
    build: ./nginx
    container_name: nginx
    networks:
      - myNetwork
    ports:
      - 80:80
    depends_on:
      - django
    volumes:
      - django_static_volume:/home/src/app/static
      - django_media_volume:/home/src/app/media 


  db:
    image: postgres:14.4-alpine
    container_name: postgresdb
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB-app_dev}
      POSTGRES_PORT: ${POSTGRES_PORT-5432}
      POSTGRES_USER: ${POSTGRES_USER-app_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-OwOtBdfep9Frut}
    networks:
      - myNetwork
  # redis:
  #   restart: unless-stopped
  #   image: redis:7.0.5-alpine 
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - myNetwork
  #   depends_on:
  #     - db

volumes:
  postgres_data:
  django_static_volume:
  django_media_volume:

networks:
  myNetwork:
    driver: bridge